# vim: foldmethod=marker 
## TMUX

# --------------------------------------------------------
#### Theme colors {{{

# --> Catppuccin (Mocha)
thm_CM_bg="#1e1e2e"
thm_CM_fg="#cdd6f4"
thm_CM_cyan="#89dceb"
thm_CM_black="#181825"
thm_CM_gray="#313244"
thm_CM_magenta="#cba6f7"
thm_CM_pink="#f5c2e7"
thm_CM_red="#f38ba8"
thm_CM_green="#a6e3a1"
thm_CM_yellow="#f9e2af"
thm_CM_blue="#89b4fa"
thm_CM_orange="#fab387"
thm_CM_black4="#585b70"

# -->  Laracast
thm_DF_space_cadet="#1F2335"
thm_DF_ultra_violet="#545C7E"
thm_DF_platinum="#E9E9EA"
thm_DF_gray="#7C7D83"
thm_DF_raisin_black="#242631"

# --> Lighthouse theme
thm_LH_bg="#18191E"
thm_LH_bga="#21252D"
thm_LH_fg="#fFEE79"
thm_LH_cursor="#fFff00"
thm_LH_bgh="#090B26"
thm_LH_fgh="#fF4D00"



## SETTERS

# bold underscore blink noreverse hidden dim italics

# status style
thm_use_ss_fg="fg=$thm_DF_gray"
thm_use_ss_bg="bg=$thm_DF_raisin_black"
#thm_use_ss_bg="bg=$thm_LH_bgh"
thm_use_ss_st="none"

# window status current style
thm_use_wscs_fg="fg=$thm_DF_platinum"
thm_use_wscs_bg=""
thm_use_wscs_st="bold"

# window Status activity style
thm_use_wsas_fg=""
thm_use_wsas_bg=""
thm_use_wsas_st=""

# pane active border style
thm_use_pabs_fg="fg=$thm_DF_ultra_violet"
thm_use_pabs_bg=""
thm_use_pabs_st="bold"

# pane border style
thm_use_pbs_fg="fg=$thm_DF_space_cadet"
thm_use_pbs_bg=""
thm_use_pbs_st=""

#}}}

# --------------------------------------------------------
#### Settings {{{

# 256 colors
# set -g default-terminal "tmux-256color"

# Improve colors
set -g default-terminal "${TERM}"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Xterm keys
#set-option -g xterm-keys on

# History 
set -g history-limit 10000

# Mouse
# Allow the mouse to resize windows and select tabs
set-option -g mouse on

# Terminal emulator windows title
# Allow tmux to set the terminal title
set -g set-titles on
#set -g set-titles-string "#T"

# Use Vi mode
setw -g mode-keys vi

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Notifications
set -g visual-bell off
#set -g visual-bell on
set -g visual-activity off
#set -g visual-activity on

# Focus events enabled for terminals that support them
set -g focus-events on

# No wait to change the mode inside vim
set -s escape-time 0

# CLipboard
#  bind-key -T copy-mode y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
#  bind-key C-y run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
#}}}

# --------------------------------------------------------
#### Keybindings {{{

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Reload window
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded"

# Toggle mouse
bind-key m set-option -g mouse \; display "Mouse: #{?mouse,ON,OFF}"

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"
bind-key > swap-window -t +1 \; next
bind-key < swap-window -t -1 \; prev

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection;

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

# Tscript
bind-key -r F new-window t
bind-key -r D run-shell "t ~/.dotfiles"

#}}}

# --------------------------------------------------------
#### Status{{{
# Monitor window activity to display in the status bar
setw -g monitor-activity on

#[left|centre|right]
set -g status-justify centre

# Length
set-option -g status-left-length 100
set-option -g status-right-length 100

# LEFT
#set-option -g status-left " #{session_name}  "
set-option -g status-left "#{?client_prefix,#[bg=colour2],#[bg=colour1]}#[fg=colour0] #S "
# set-option -g status-left " " # Screencast mode

# RIGHT
set-option -g status-right "#{pane_title} "

# Style 
set-option -g status-style "$thm_use_ss_fg $thm_use_ss_bg $thm_use_ss_st"
#set-option -g status-style "fg=#545c7e bg=#1f2335"
#set-option -g status-style "fg=#545c7e bg=default" # Screencast mode

# Formats
set-option -g window-status-format "#{window_index}:#{pane_current_command}#{window_flags} "
set-option -g window-status-current-format "#{window_index}:#{pane_current_command}#{window_flags} "

# Current
set-option -g window-status-current-style "$thm_use_wscs_fg $thm_use_wscs_bg $thm_use_wscs_st"
set-option -g window-status-activity-style "$thm_use_wsas_fg $thm_use_wsas_bg $thm_use_wsas_st"

# Border
set-option -g pane-active-border-style "$thm_use_pabs_fg $thm_use_pabs_bg $thm_use_pabs_st"
set-option -g pane-border-style "$thm_use_pbs_fg $thm_use_pbs_bg $thm_use_pbs_st"

#}}}

# --------------------------------------------------------
#### Plugins{{{

#}}}

