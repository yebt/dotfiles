# vim: foldmethod=marker

# Tmux

## -----------------------------------
# Vars {{{
color_1="#7C7D83"
color_2="#E9E9EA"
color_3="#242631"
color_4="#473BF0"

green_emerald="#2FBF71"
green="#345511"
green_mantis="#5FAD56"
green_yellow="#AFFC41"
yellow="#EFA00B"
yellow_2="#EFA04B"
yellow_2_s="#8A633E"
orange="#D65108"
salmon="#EC4E20"
rd="#F40000"
rd_bittersweet="#ee5154"
rd_bittersweet_s="#893C43"
fuxia="#B10F2E"

# }}}

## -----------------------------------
# Settings {{{

# Use vi mode
set -g mode-keys "vi"

# Increase scrollbar buffer
set -g history-limit 1000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "${TERM}"
set-option -sa terminal-features ",${TERM}:RGB"
# set -g default-terminal "tmux-256color"
# set-option -sa terminal-features ',xterm-256color:RGB'

set -ag terminal-overrides ",${TERM}:Tc"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Undercurl

set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Alacritty
set -as terminal-features ",alacritty:RGB"


# Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# Don't detach tmux when killing a session
#set -g detach-on-destroy off

# # address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# }}}

# ## -----------------------------------
# Key Bindings {{{

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Reload config
unbind r
bind r source-file "~/.config/tmux/tmux.conf" \; display-message "~/.config/tmux/tmux.conf reloaded"

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window


# Clipboard
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# # Move around panes like in vim
# bind -r h select-pane -L
# bind -r j select-pane -D
# bind -r k select-pane -U
# bind -r l select-pane -R
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+
#
# # Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"
bind-key > swap-window -t +1 \; next
bind-key < swap-window -t -1 \; prev

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

bind-key -r F new-window t
# bind-key -r D run-shell "t ~/Code/jessarcher/dotfiles"

# }}}

## -----------------------------------
# Status line {{{

# bold underscore blink noreverse hidden dim italics

set-option -g status-left-length 100
set-option -g status-right-length 100
set-option -g status-left " #{session_name}  "
set-option -g status-right "#{pane_title} "
set-option -g status-style "fg=$color_1 bg=$color_3"
# set-option -g window-status-format "#{window_index}:#{pane_current_command}#{window_flags} "

# pane-border-indicators [off | colour | arrows | both]
set -g pane-border-indicators both
# single double heavy simple number
set -g pane-border-lines heavy
# set -g pane-border-style "fg=$color_1"
set -g pane-border-style "fg=black"
# set -g pane-active-border-style "fg=$color_2"
# set -g pane-active-border-style "fg=#FDE74C"
set -g pane-active-border-style "fg=white"

set-option -g status-left "#{?client_prefix,#[bg=$color_4 fg=$color_2 bold],#[bg=$color_3 fg=$color_1]} #S #[bg=$color_3] "
set-option -g window-status-format "#[fg=$yellow_2_s][#I]#[fg=$color_1 bg=$color_3]#W#[italics fg=$rd_bittersweet_s]#F"
set-option -g window-status-current-format "#[bold]#[fg=$yellow_2][#I]#[fg=$color_2 bg=$color_3] #W#[italics]#[fg=$rd_bittersweet]#F"

set-option -g window-status-current-style "fg=$color_2"
set-option -g window-status-activity-style none

set -g window-style ''
set -g window-active-style ''

# setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
# setw -g window-status-current-format "#[bg=$yellow_2 fg=$color_3 bold ] #I #[bg=$color_3 fg=$yellow_2 bold ]#[fg=colour255]#W#[fg=colour249]#F "




# }}}
