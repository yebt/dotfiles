#!/usr/bin/env zsh

# α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω
# ᴦ ᴧ ᴨ ᴩ ᴪ
# Α Β Γ Δ Ε Ζ Η Θ Ι Κ Λ Μ Ν Ξ Ο Π Ρ Σ Τ Υ Φ Χ Ψ Ω
# ϒ
# Ϳ ϳ ϴ ϵ ϶ ϼ Ϗ ϐ ϑ ϕ ϖ ϗ ϰ ϱ ϲ Ϲ
# 🝪 🜂 ⯅ ▲ 󰔶 󱑼

# black		0
# red		1
# green		2
# yellow	3
# blue		4
# magenta	5
# cyan		6
# white		7

# Start | End 	| Effect
# ----------------------------
# %B	| %b	| Bold
# %I	| %i	| Italic
# %U	| %u	| Underline
# %S	| %s	| Highlighted
# %F{}	| %f{} 	| Change forground color
# %K{}	| %k{}	| Change background color

CODELY_THEME_MINIMAL=${CODELY_THEME_MINIMAL:-false}
CODELY_THEME_MODE=${CODELY_THEME_MODE:-"darks"}
CODELY_THEME_PROMPT_IN_NEW_LINE=${CODELY_THEME_PROMPT_IN_NEW_LINE:-false}
CODELY_THEME_PWD_MODE=${CODELY_THEME_PWD_MODE:-"short"} # full, short, home_relative

CODELY_THEME_STATUS_ICON_OK=${CODELY_THEME_STATUS_ICON_OK:-"λ"}
CODELY_THEME_STATUS_ICON_KO=${CODELY_THEME_STATUS_ICON_KO:-"?"}
WRAP_LEFT=" "
WRAP_RIGHT=" "
#      󱑼 󰞏 󱐋  󰈸 󰅨                
#   󰉁 󰼁 󰧿 󰫐 
START_ICON=""
PROMPT_SYMBOL="~>"


 [[ $(echotc Co) -gt 100 ]] && support_color_tones=true || support_color_tones=false

git_no_changes_status="✓"
git_dirty_status="✗"

if [ "$CODELY_THEME_MODE" = "dark" ]; then
  git_branch_color="green"
  git_dirty_status_color="yellow"
  git_no_changes_status_color="white"
  git_on_branch_color="white"
  pwd_color="yellow"
  diamond_color="white"
  status_icon_color_ok="green"
  status_icon_color_ko="red"
  [[ $support_color_tones = true ]] && ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8' || ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=magenta'

else
  git_branch_color="black"
  git_dirty_status_color="magenta"
  git_no_changes_status_color="green"
  git_on_branch_color="green"
  pwd_color="black"
  diamond_color="black"
  status_icon_color_ok="black"
  status_icon_color_ko="red"
  [[ $support_color_tones = true ]] && ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8' || ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=magenta'
fi

prompt_codely_pwd() {
  case "$CODELY_THEME_PWD_MODE" in
    short) local -r prompt_dir=$("$DOTLY_PATH/bin/dot" core short_pwd) ;;
    full) local -r prompt_dir="$PWD" ;;
    home_relative) local -r prompt_dir=$(print -rD "$PWD") ;;
  esac

  print -n "%{\x1b[3m%}%K{$pwd_color}%F{black} ${prompt_dir} %k%{\x1b[0m%}"
}

prompt_codely_git() {
  [[ -n ${git_info} ]] && print -n "%F{$git_on_branch_color} on${(e)git_info[prompt]}"
}

prompt_codely_precmd() {
  (( ${+functions[git-info]} )) && git-info
}

prompt_codely_setup() {
	#local prompt_codely_status="%B%K{$diamond_color}%F{black} $START_ICON %k%b%(?\
	local prompt_codely_status="%(?\
:%B%K{$status_icon_color_ok}%F{diamond_color}$WRAP_LEFT%F{black}$CODELY_THEME_STATUS_ICON_OK%F{diamond_color}$WRAP_RIGHT%b%k\
:%B%K{$status_icon_color_ko}%F{diamond_color}$WRAP_LEFT%F{black}$CODELY_THEME_STATUS_ICON_KO%F{diamond_color}$WRAP_RIGHT%b%k\
)"
  #local prompt_codely_status="%(?:%F{diamond_color}$WRAP_LEFT%K{$status_icon_color_ok}$CODELY_THEME_STATUS_ICON_OK%F{diamond_color}$WRAP_RIGHT%k:%F{diamond_color}$WRAP_LEFT%F{$status_icon_color_ko}$CODELY_THEME_STATUS_ICON_KO%F{diamond_color}$WRAP_RIGHT)"

  autoload -Uz add-zsh-hook && add-zsh-hook precmd prompt_codely_precmd

  prompt_opts=(cr percent sp subst)

  zstyle ':zim:git-info:branch' format "%F{$git_branch_color}%b"
  zstyle ':zim:git-info:commit' format "%c"
  zstyle ':zim:git-info:clean' format "%F{$git_no_changes_status_color}$git_no_changes_status"
  zstyle ':zim:git-info:dirty' format "%F{$git_dirty_status_color}$git_dirty_status"
  zstyle ':zim:git-info:keys' format "prompt" " %F{cyan}%b%c %C%D"

  if [ "$CODELY_THEME_MINIMAL" = true ]; then
    PS1="${prompt_codely_status}\$(prompt_codely_pwd) "
  else
    PS1="${prompt_codely_status}\$(prompt_codely_pwd)\$(prompt_codely_git)%f "
  fi

  if [ "$CODELY_THEME_PROMPT_IN_NEW_LINE" = true ]; then
    PS1="$PS1"$'\n%B%F{black}%K{white}$PROMPT_SYMBOL %b%k '
  fi

  RPS1=''
}

prompt_codely_setup "${@}"
